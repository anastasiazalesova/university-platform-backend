buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.2.8.jre7'
    }
}

plugins {
    id 'java'
    id 'nu.studer.jooq' version '4.1'
    id 'org.flywaydb.flyway' version '6.2.4'
    id 'io.freefair.lombok' version '5.0.0-rc2'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'com.avast.gradle.docker-compose' version '0.10.9'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

apply from: 'libraries.gradle'

group = 'info.bubna.up'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    jooqRuntime 'org.postgresql:postgresql:42.2.8.jre7'

    implementation 'org.postgresql:postgresql:42.2.8.jre7'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

flyway {
    url = project.ext.dbUrl
    user = project.ext.dbUsername
    schemas = [project.ext.dbSchema]
    password = project.ext.dbPassword
}

dockerCompose {
    useComposeFiles = ["$rootProject.projectDir/docker-compose/docker-compose.yml"]
}

jooq {
    version = '3.12.3'
    edition = 'OSS'
    up(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = project.ext.dbUrl
            user = project.ext.dbUsername
            password = project.ext.dbPassword
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = project.ext.dbSchema
            }
            generate {
                deprecated = false
                instanceFields = true
                pojos = true
                daos = true
                interfaces = true
                relations = true
                springAnnotations = true
                validationAnnotations = true
            }
            target {
                packageName = 'info.bubna.up.gen'
            }
        }
    }
}

bootRun {
    environment('SPRING_DATASOURCE_URL', project.ext.dbUrl)
    environment('SPRING_DATASOURCE_USERNAME', project.ext.dbUsername)
    environment('SPRING_DATASOURCE_PASSWORD', project.ext.dbPassword)
    environment('SPRING_DATASOURCE_DRIVERCLASSNAME', 'org.postgresql.Driver')
}